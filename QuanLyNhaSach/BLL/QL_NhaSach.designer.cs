#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_NhaSach")]
	public partial class QL_NhaSachDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDonHang(ChiTietDonHang instance);
    partial void UpdateChiTietDonHang(ChiTietDonHang instance);
    partial void DeleteChiTietDonHang(ChiTietDonHang instance);
    partial void InsertChiTietGioHang(ChiTietGioHang instance);
    partial void UpdateChiTietGioHang(ChiTietGioHang instance);
    partial void DeleteChiTietGioHang(ChiTietGioHang instance);
    partial void InsertChiTietPhieuNhapSach(ChiTietPhieuNhapSach instance);
    partial void UpdateChiTietPhieuNhapSach(ChiTietPhieuNhapSach instance);
    partial void DeleteChiTietPhieuNhapSach(ChiTietPhieuNhapSach instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertGioHang(GioHang instance);
    partial void UpdateGioHang(GioHang instance);
    partial void DeleteGioHang(GioHang instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertManHinh(ManHinh instance);
    partial void UpdateManHinh(ManHinh instance);
    partial void DeleteManHinh(ManHinh instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertNhanVienNhomNhanVien(NhanVienNhomNhanVien instance);
    partial void UpdateNhanVienNhomNhanVien(NhanVienNhomNhanVien instance);
    partial void DeleteNhanVienNhomNhanVien(NhanVienNhomNhanVien instance);
    partial void InsertNhaXuatBan(NhaXuatBan instance);
    partial void UpdateNhaXuatBan(NhaXuatBan instance);
    partial void DeleteNhaXuatBan(NhaXuatBan instance);
    partial void InsertNhomNhanVien(NhomNhanVien instance);
    partial void UpdateNhomNhanVien(NhomNhanVien instance);
    partial void DeleteNhomNhanVien(NhomNhanVien instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    partial void InsertPhieuNhapSach(PhieuNhapSach instance);
    partial void UpdatePhieuNhapSach(PhieuNhapSach instance);
    partial void DeletePhieuNhapSach(PhieuNhapSach instance);
    partial void InsertSach(Sach instance);
    partial void UpdateSach(Sach instance);
    partial void DeleteSach(Sach instance);
    partial void InsertTacGia(TacGia instance);
    partial void UpdateTacGia(TacGia instance);
    partial void DeleteTacGia(TacGia instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    #endregion
		
		public QL_NhaSachDataContext() : 
				base(global::BLL.Properties.Settings.Default.QL_NhaSachConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_NhaSachDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_NhaSachDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_NhaSachDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_NhaSachDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this.GetTable<ChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietGioHang> ChiTietGioHangs
		{
			get
			{
				return this.GetTable<ChiTietGioHang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhieuNhapSach> ChiTietPhieuNhapSaches
		{
			get
			{
				return this.GetTable<ChiTietPhieuNhapSach>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<GioHang> GioHangs
		{
			get
			{
				return this.GetTable<GioHang>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<ManHinh> ManHinhs
		{
			get
			{
				return this.GetTable<ManHinh>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<NhanVienNhomNhanVien> NhanVienNhomNhanViens
		{
			get
			{
				return this.GetTable<NhanVienNhomNhanVien>();
			}
		}
		
		public System.Data.Linq.Table<NhaXuatBan> NhaXuatBans
		{
			get
			{
				return this.GetTable<NhaXuatBan>();
			}
		}
		
		public System.Data.Linq.Table<NhomNhanVien> NhomNhanViens
		{
			get
			{
				return this.GetTable<NhomNhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhapSach> PhieuNhapSaches
		{
			get
			{
				return this.GetTable<PhieuNhapSach>();
			}
		}
		
		public System.Data.Linq.Table<Sach> Saches
		{
			get
			{
				return this.GetTable<Sach>();
			}
		}
		
		public System.Data.Linq.Table<TacGia> TacGias
		{
			get
			{
				return this.GetTable<TacGia>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
	public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_DH;
		
		private int _Id_Sach;
		
		private System.Nullable<int> _SoLuongMua;
		
		private System.Nullable<int> _DonGia;
		
		private System.Nullable<int> _ThanhTien;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<Sach> _Sach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_DHChanging(int value);
    partial void OnId_DHChanged();
    partial void OnId_SachChanging(int value);
    partial void OnId_SachChanged();
    partial void OnSoLuongMuaChanging(System.Nullable<int> value);
    partial void OnSoLuongMuaChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public ChiTietDonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._Sach = default(EntityRef<Sach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_DH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_DH
		{
			get
			{
				return this._Id_DH;
			}
			set
			{
				if ((this._Id_DH != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_DHChanging(value);
					this.SendPropertyChanging();
					this._Id_DH = value;
					this.SendPropertyChanged("Id_DH");
					this.OnId_DHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sach", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Sach
		{
			get
			{
				return this._Id_Sach;
			}
			set
			{
				if ((this._Id_Sach != value))
				{
					if (this._Sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_SachChanging(value);
					this.SendPropertyChanging();
					this._Id_Sach = value;
					this.SendPropertyChanged("Id_Sach");
					this.OnId_SachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongMua", DbType="Int")]
		public System.Nullable<int> SoLuongMua
		{
			get
			{
				return this._SoLuongMua;
			}
			set
			{
				if ((this._SoLuongMua != value))
				{
					this.OnSoLuongMuaChanging(value);
					this.SendPropertyChanging();
					this._SoLuongMua = value;
					this.SendPropertyChanged("SoLuongMua");
					this.OnSoLuongMuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_DonHang", ThisKey="Id_DH", OtherKey="Id", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._Id_DH = value.Id;
					}
					else
					{
						this._Id_DH = default(int);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_ChiTietDonHang", Storage="_Sach", ThisKey="Id_Sach", OtherKey="Id", IsForeignKey=true)]
		public Sach Sach
		{
			get
			{
				return this._Sach.Entity;
			}
			set
			{
				Sach previousValue = this._Sach.Entity;
				if (((previousValue != value) 
							|| (this._Sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sach.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._Sach.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._Id_Sach = value.Id;
					}
					else
					{
						this._Id_Sach = default(int);
					}
					this.SendPropertyChanged("Sach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietGioHang")]
	public partial class ChiTietGioHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_GH;
		
		private int _Id_Sach;
		
		private System.Nullable<int> _SoLuongMua;
		
		private System.Nullable<int> _DonGia;
		
		private System.Nullable<int> _ThanhTien;
		
		private EntityRef<GioHang> _GioHang;
		
		private EntityRef<Sach> _Sach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_GHChanging(int value);
    partial void OnId_GHChanged();
    partial void OnId_SachChanging(int value);
    partial void OnId_SachChanged();
    partial void OnSoLuongMuaChanging(System.Nullable<int> value);
    partial void OnSoLuongMuaChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public ChiTietGioHang()
		{
			this._GioHang = default(EntityRef<GioHang>);
			this._Sach = default(EntityRef<Sach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_GH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_GH
		{
			get
			{
				return this._Id_GH;
			}
			set
			{
				if ((this._Id_GH != value))
				{
					if (this._GioHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_GHChanging(value);
					this.SendPropertyChanging();
					this._Id_GH = value;
					this.SendPropertyChanged("Id_GH");
					this.OnId_GHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sach", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Sach
		{
			get
			{
				return this._Id_Sach;
			}
			set
			{
				if ((this._Id_Sach != value))
				{
					if (this._Sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_SachChanging(value);
					this.SendPropertyChanging();
					this._Id_Sach = value;
					this.SendPropertyChanged("Id_Sach");
					this.OnId_SachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongMua", DbType="Int")]
		public System.Nullable<int> SoLuongMua
		{
			get
			{
				return this._SoLuongMua;
			}
			set
			{
				if ((this._SoLuongMua != value))
				{
					this.OnSoLuongMuaChanging(value);
					this.SendPropertyChanging();
					this._SoLuongMua = value;
					this.SendPropertyChanged("SoLuongMua");
					this.OnSoLuongMuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GioHang_ChiTietGioHang", Storage="_GioHang", ThisKey="Id_GH", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GioHang GioHang
		{
			get
			{
				return this._GioHang.Entity;
			}
			set
			{
				GioHang previousValue = this._GioHang.Entity;
				if (((previousValue != value) 
							|| (this._GioHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GioHang.Entity = null;
						previousValue.ChiTietGioHangs.Remove(this);
					}
					this._GioHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietGioHangs.Add(this);
						this._Id_GH = value.Id;
					}
					else
					{
						this._Id_GH = default(int);
					}
					this.SendPropertyChanged("GioHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_ChiTietGioHang", Storage="_Sach", ThisKey="Id_Sach", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Sach Sach
		{
			get
			{
				return this._Sach.Entity;
			}
			set
			{
				Sach previousValue = this._Sach.Entity;
				if (((previousValue != value) 
							|| (this._Sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sach.Entity = null;
						previousValue.ChiTietGioHangs.Remove(this);
					}
					this._Sach.Entity = value;
					if ((value != null))
					{
						value.ChiTietGioHangs.Add(this);
						this._Id_Sach = value.Id;
					}
					else
					{
						this._Id_Sach = default(int);
					}
					this.SendPropertyChanged("Sach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuNhapSach")]
	public partial class ChiTietPhieuNhapSach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_PNS;
		
		private int _Id_Sach;
		
		private System.Nullable<int> _SoLuongNhap;
		
		private System.Nullable<int> _GiaNhap;
		
		private System.Nullable<int> _ThanhTien;
		
		private EntityRef<PhieuNhapSach> _PhieuNhapSach;
		
		private EntityRef<Sach> _Sach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_PNSChanging(int value);
    partial void OnId_PNSChanged();
    partial void OnId_SachChanging(int value);
    partial void OnId_SachChanged();
    partial void OnSoLuongNhapChanging(System.Nullable<int> value);
    partial void OnSoLuongNhapChanged();
    partial void OnGiaNhapChanging(System.Nullable<int> value);
    partial void OnGiaNhapChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public ChiTietPhieuNhapSach()
		{
			this._PhieuNhapSach = default(EntityRef<PhieuNhapSach>);
			this._Sach = default(EntityRef<Sach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_PNS", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_PNS
		{
			get
			{
				return this._Id_PNS;
			}
			set
			{
				if ((this._Id_PNS != value))
				{
					if (this._PhieuNhapSach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PNSChanging(value);
					this.SendPropertyChanging();
					this._Id_PNS = value;
					this.SendPropertyChanged("Id_PNS");
					this.OnId_PNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sach", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Sach
		{
			get
			{
				return this._Id_Sach;
			}
			set
			{
				if ((this._Id_Sach != value))
				{
					if (this._Sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_SachChanging(value);
					this.SendPropertyChanging();
					this._Id_Sach = value;
					this.SendPropertyChanged("Id_Sach");
					this.OnId_SachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongNhap", DbType="Int")]
		public System.Nullable<int> SoLuongNhap
		{
			get
			{
				return this._SoLuongNhap;
			}
			set
			{
				if ((this._SoLuongNhap != value))
				{
					this.OnSoLuongNhapChanging(value);
					this.SendPropertyChanging();
					this._SoLuongNhap = value;
					this.SendPropertyChanged("SoLuongNhap");
					this.OnSoLuongNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaNhap", DbType="Int")]
		public System.Nullable<int> GiaNhap
		{
			get
			{
				return this._GiaNhap;
			}
			set
			{
				if ((this._GiaNhap != value))
				{
					this.OnGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._GiaNhap = value;
					this.SendPropertyChanged("GiaNhap");
					this.OnGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhapSach_ChiTietPhieuNhapSach", Storage="_PhieuNhapSach", ThisKey="Id_PNS", OtherKey="Id", IsForeignKey=true)]
		public PhieuNhapSach PhieuNhapSach
		{
			get
			{
				return this._PhieuNhapSach.Entity;
			}
			set
			{
				PhieuNhapSach previousValue = this._PhieuNhapSach.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhapSach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhapSach.Entity = null;
						previousValue.ChiTietPhieuNhapSaches.Remove(this);
					}
					this._PhieuNhapSach.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhapSaches.Add(this);
						this._Id_PNS = value.Id;
					}
					else
					{
						this._Id_PNS = default(int);
					}
					this.SendPropertyChanged("PhieuNhapSach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_ChiTietPhieuNhapSach", Storage="_Sach", ThisKey="Id_Sach", OtherKey="Id", IsForeignKey=true)]
		public Sach Sach
		{
			get
			{
				return this._Sach.Entity;
			}
			set
			{
				Sach previousValue = this._Sach.Entity;
				if (((previousValue != value) 
							|| (this._Sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sach.Entity = null;
						previousValue.ChiTietPhieuNhapSaches.Remove(this);
					}
					this._Sach.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhapSaches.Add(this);
						this._Id_Sach = value.Id;
					}
					else
					{
						this._Id_Sach = default(int);
					}
					this.SendPropertyChanged("Sach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _Id_NV;
		
		private System.Nullable<int> _Id_KH;
		
		private System.Nullable<int> _TrangThaiDonHang;
		
		private System.Nullable<bool> _TrangThaiThanhToan;
		
		private string _HoTenNguoiNhan;
		
		private string _SDT;
		
		private string _DiaChiNhanHang;
		
		private System.Nullable<bool> _PhuongThucThanhToan;
		
		private System.Nullable<int> _TongTien;
		
		private System.Nullable<bool> _DaXoa;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnId_NVChanging(System.Nullable<int> value);
    partial void OnId_NVChanged();
    partial void OnId_KHChanging(System.Nullable<int> value);
    partial void OnId_KHChanged();
    partial void OnTrangThaiDonHangChanging(System.Nullable<int> value);
    partial void OnTrangThaiDonHangChanged();
    partial void OnTrangThaiThanhToanChanging(System.Nullable<bool> value);
    partial void OnTrangThaiThanhToanChanged();
    partial void OnHoTenNguoiNhanChanging(string value);
    partial void OnHoTenNguoiNhanChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiNhanHangChanging(string value);
    partial void OnDiaChiNhanHangChanged();
    partial void OnPhuongThucThanhToanChanging(System.Nullable<bool> value);
    partial void OnPhuongThucThanhToanChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    partial void OnDaXoaChanging(System.Nullable<bool> value);
    partial void OnDaXoaChanged();
    #endregion
		
		public DonHang()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_NV", DbType="Int")]
		public System.Nullable<int> Id_NV
		{
			get
			{
				return this._Id_NV;
			}
			set
			{
				if ((this._Id_NV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_NVChanging(value);
					this.SendPropertyChanging();
					this._Id_NV = value;
					this.SendPropertyChanged("Id_NV");
					this.OnId_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_KH", DbType="Int")]
		public System.Nullable<int> Id_KH
		{
			get
			{
				return this._Id_KH;
			}
			set
			{
				if ((this._Id_KH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_KHChanging(value);
					this.SendPropertyChanging();
					this._Id_KH = value;
					this.SendPropertyChanged("Id_KH");
					this.OnId_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiDonHang", DbType="Int")]
		public System.Nullable<int> TrangThaiDonHang
		{
			get
			{
				return this._TrangThaiDonHang;
			}
			set
			{
				if ((this._TrangThaiDonHang != value))
				{
					this.OnTrangThaiDonHangChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiDonHang = value;
					this.SendPropertyChanged("TrangThaiDonHang");
					this.OnTrangThaiDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiThanhToan", DbType="Bit")]
		public System.Nullable<bool> TrangThaiThanhToan
		{
			get
			{
				return this._TrangThaiThanhToan;
			}
			set
			{
				if ((this._TrangThaiThanhToan != value))
				{
					this.OnTrangThaiThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiThanhToan = value;
					this.SendPropertyChanged("TrangThaiThanhToan");
					this.OnTrangThaiThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNguoiNhan", DbType="NVarChar(100)")]
		public string HoTenNguoiNhan
		{
			get
			{
				return this._HoTenNguoiNhan;
			}
			set
			{
				if ((this._HoTenNguoiNhan != value))
				{
					this.OnHoTenNguoiNhanChanging(value);
					this.SendPropertyChanging();
					this._HoTenNguoiNhan = value;
					this.SendPropertyChanged("HoTenNguoiNhan");
					this.OnHoTenNguoiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNhanHang", DbType="NVarChar(200)")]
		public string DiaChiNhanHang
		{
			get
			{
				return this._DiaChiNhanHang;
			}
			set
			{
				if ((this._DiaChiNhanHang != value))
				{
					this.OnDiaChiNhanHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNhanHang = value;
					this.SendPropertyChanged("DiaChiNhanHang");
					this.OnDiaChiNhanHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThucThanhToan", DbType="Bit")]
		public System.Nullable<bool> PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan;
			}
			set
			{
				if ((this._PhuongThucThanhToan != value))
				{
					this.OnPhuongThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PhuongThucThanhToan = value;
					this.SendPropertyChanged("PhuongThucThanhToan");
					this.OnPhuongThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaXoa", DbType="Bit")]
		public System.Nullable<bool> DaXoa
		{
			get
			{
				return this._DaXoa;
			}
			set
			{
				if ((this._DaXoa != value))
				{
					this.OnDaXoaChanging(value);
					this.SendPropertyChanging();
					this._DaXoa = value;
					this.SendPropertyChanged("DaXoa");
					this.OnDaXoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="Id", OtherKey="Id_DH")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_KhachHang", ThisKey="Id_KH", OtherKey="Id", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._Id_KH = value.Id;
					}
					else
					{
						this._Id_KH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DonHang", Storage="_NhanVien", ThisKey="Id_NV", OtherKey="Id", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._Id_NV = value.Id;
					}
					else
					{
						this._Id_NV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GioHang")]
	public partial class GioHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Id_KH;
		
		private System.Nullable<int> _TongTien;
		
		private EntitySet<ChiTietGioHang> _ChiTietGioHangs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_KHChanging(System.Nullable<int> value);
    partial void OnId_KHChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    #endregion
		
		public GioHang()
		{
			this._ChiTietGioHangs = new EntitySet<ChiTietGioHang>(new Action<ChiTietGioHang>(this.attach_ChiTietGioHangs), new Action<ChiTietGioHang>(this.detach_ChiTietGioHangs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_KH", DbType="Int")]
		public System.Nullable<int> Id_KH
		{
			get
			{
				return this._Id_KH;
			}
			set
			{
				if ((this._Id_KH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_KHChanging(value);
					this.SendPropertyChanging();
					this._Id_KH = value;
					this.SendPropertyChanged("Id_KH");
					this.OnId_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GioHang_ChiTietGioHang", Storage="_ChiTietGioHangs", ThisKey="Id", OtherKey="Id_GH")]
		public EntitySet<ChiTietGioHang> ChiTietGioHangs
		{
			get
			{
				return this._ChiTietGioHangs;
			}
			set
			{
				this._ChiTietGioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_GioHang", Storage="_KhachHang", ThisKey="Id_KH", OtherKey="Id", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._Id_KH = value.Id;
					}
					else
					{
						this._Id_KH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.GioHang = this;
		}
		
		private void detach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.GioHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _HoTen;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _Email;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private System.Nullable<bool> _DaXoa;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<GioHang> _GioHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDaXoaChanging(System.Nullable<bool> value);
    partial void OnDaXoaChanged();
    #endregion
		
		public KhachHang()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(100)")]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(100)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaXoa", DbType="Bit")]
		public System.Nullable<bool> DaXoa
		{
			get
			{
				return this._DaXoa;
			}
			set
			{
				if ((this._DaXoa != value))
				{
					this.OnDaXoaChanging(value);
					this.SendPropertyChanging();
					this._DaXoa = value;
					this.SendPropertyChanged("DaXoa");
					this.OnDaXoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_DonHangs", ThisKey="Id", OtherKey="Id_KH")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_GioHang", Storage="_GioHangs", ThisKey="Id", OtherKey="Id_KH")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManHinh")]
	public partial class ManHinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenManHinh;
		
		private EntitySet<PhanQuyen> _PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenManHinhChanging(string value);
    partial void OnTenManHinhChanged();
    #endregion
		
		public ManHinh()
		{
			this._PhanQuyens = new EntitySet<PhanQuyen>(new Action<PhanQuyen>(this.attach_PhanQuyens), new Action<PhanQuyen>(this.detach_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenManHinh", DbType="NVarChar(100)")]
		public string TenManHinh
		{
			get
			{
				return this._TenManHinh;
			}
			set
			{
				if ((this._TenManHinh != value))
				{
					this.OnTenManHinhChanging(value);
					this.SendPropertyChanging();
					this._TenManHinh = value;
					this.SendPropertyChanged("TenManHinh");
					this.OnTenManHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManHinh_PhanQuyen", Storage="_PhanQuyens", ThisKey="Id", OtherKey="Id_MH")]
		public EntitySet<PhanQuyen> PhanQuyens
		{
			get
			{
				return this._PhanQuyens;
			}
			set
			{
				this._PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.ManHinh = this;
		}
		
		private void detach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.ManHinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _HoTen;
		
		private string _Email;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private System.Nullable<bool> _DaXoa;
		
		private EntitySet<PhieuNhapSach> _PhieuNhapSaches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDaXoaChanging(System.Nullable<bool> value);
    partial void OnDaXoaChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._PhieuNhapSaches = new EntitySet<PhieuNhapSach>(new Action<PhieuNhapSach>(this.attach_PhieuNhapSaches), new Action<PhieuNhapSach>(this.detach_PhieuNhapSaches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaXoa", DbType="Bit")]
		public System.Nullable<bool> DaXoa
		{
			get
			{
				return this._DaXoa;
			}
			set
			{
				if ((this._DaXoa != value))
				{
					this.OnDaXoaChanging(value);
					this.SendPropertyChanging();
					this._DaXoa = value;
					this.SendPropertyChanged("DaXoa");
					this.OnDaXoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_PhieuNhapSach", Storage="_PhieuNhapSaches", ThisKey="Id", OtherKey="Id_NCC")]
		public EntitySet<PhieuNhapSach> PhieuNhapSaches
		{
			get
			{
				return this._PhieuNhapSaches;
			}
			set
			{
				this._PhieuNhapSaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuNhapSaches(PhieuNhapSach entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_PhieuNhapSaches(PhieuNhapSach entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _HoTen;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _Email;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private System.Nullable<bool> _HoatDong;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<NhanVienNhomNhanVien> _NhanVienNhomNhanViens;
		
		private EntitySet<PhieuNhapSach> _PhieuNhapSaches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnHoatDongChanging(System.Nullable<bool> value);
    partial void OnHoatDongChanged();
    #endregion
		
		public NhanVien()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._NhanVienNhomNhanViens = new EntitySet<NhanVienNhomNhanVien>(new Action<NhanVienNhomNhanVien>(this.attach_NhanVienNhomNhanViens), new Action<NhanVienNhomNhanVien>(this.detach_NhanVienNhomNhanViens));
			this._PhieuNhapSaches = new EntitySet<PhieuNhapSach>(new Action<PhieuNhapSach>(this.attach_PhieuNhapSaches), new Action<PhieuNhapSach>(this.detach_PhieuNhapSaches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(100)")]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(100)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoatDong", DbType="Bit")]
		public System.Nullable<bool> HoatDong
		{
			get
			{
				return this._HoatDong;
			}
			set
			{
				if ((this._HoatDong != value))
				{
					this.OnHoatDongChanging(value);
					this.SendPropertyChanging();
					this._HoatDong = value;
					this.SendPropertyChanged("HoatDong");
					this.OnHoatDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DonHang", Storage="_DonHangs", ThisKey="Id", OtherKey="Id_NV")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NhanVienNhomNhanVien", Storage="_NhanVienNhomNhanViens", ThisKey="Id", OtherKey="Id_ND")]
		public EntitySet<NhanVienNhomNhanVien> NhanVienNhomNhanViens
		{
			get
			{
				return this._NhanVienNhomNhanViens;
			}
			set
			{
				this._NhanVienNhomNhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhapSach", Storage="_PhieuNhapSaches", ThisKey="Id", OtherKey="Id_NV")]
		public EntitySet<PhieuNhapSach> PhieuNhapSaches
		{
			get
			{
				return this._PhieuNhapSaches;
			}
			set
			{
				this._PhieuNhapSaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_NhanVienNhomNhanViens(NhanVienNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_NhanVienNhomNhanViens(NhanVienNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhieuNhapSaches(PhieuNhapSach entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuNhapSaches(PhieuNhapSach entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVienNhomNhanVien")]
	public partial class NhanVienNhomNhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_ND;
		
		private int _Id_Nhom;
		
		private string _GhiChu;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<NhomNhanVien> _NhomNhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_NDChanging(int value);
    partial void OnId_NDChanged();
    partial void OnId_NhomChanging(int value);
    partial void OnId_NhomChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public NhanVienNhomNhanVien()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			this._NhomNhanVien = default(EntityRef<NhomNhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ND", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_ND
		{
			get
			{
				return this._Id_ND;
			}
			set
			{
				if ((this._Id_ND != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_NDChanging(value);
					this.SendPropertyChanging();
					this._Id_ND = value;
					this.SendPropertyChanged("Id_ND");
					this.OnId_NDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Nhom", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Nhom
		{
			get
			{
				return this._Id_Nhom;
			}
			set
			{
				if ((this._Id_Nhom != value))
				{
					if (this._NhomNhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_NhomChanging(value);
					this.SendPropertyChanging();
					this._Id_Nhom = value;
					this.SendPropertyChanged("Id_Nhom");
					this.OnId_NhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NhanVienNhomNhanVien", Storage="_NhanVien", ThisKey="Id_ND", OtherKey="Id", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.NhanVienNhomNhanViens.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.NhanVienNhomNhanViens.Add(this);
						this._Id_ND = value.Id;
					}
					else
					{
						this._Id_ND = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNhanVien_NhanVienNhomNhanVien", Storage="_NhomNhanVien", ThisKey="Id_Nhom", OtherKey="Id", IsForeignKey=true)]
		public NhomNhanVien NhomNhanVien
		{
			get
			{
				return this._NhomNhanVien.Entity;
			}
			set
			{
				NhomNhanVien previousValue = this._NhomNhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhomNhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomNhanVien.Entity = null;
						previousValue.NhanVienNhomNhanViens.Remove(this);
					}
					this._NhomNhanVien.Entity = value;
					if ((value != null))
					{
						value.NhanVienNhomNhanViens.Add(this);
						this._Id_Nhom = value.Id;
					}
					else
					{
						this._Id_Nhom = default(int);
					}
					this.SendPropertyChanged("NhomNhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaXuatBan")]
	public partial class NhaXuatBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ten;
		
		private EntitySet<Sach> _Saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    #endregion
		
		public NhaXuatBan()
		{
			this._Saches = new EntitySet<Sach>(new Action<Sach>(this.attach_Saches), new Action<Sach>(this.detach_Saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(100)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaXuatBan_Sach", Storage="_Saches", ThisKey="Id", OtherKey="Id_NXB")]
		public EntitySet<Sach> Saches
		{
			get
			{
				return this._Saches;
			}
			set
			{
				this._Saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.NhaXuatBan = this;
		}
		
		private void detach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.NhaXuatBan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomNhanVien")]
	public partial class NhomNhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenNhom;
		
		private string _GhiChu;
		
		private EntitySet<NhanVienNhomNhanVien> _NhanVienNhomNhanViens;
		
		private EntitySet<PhanQuyen> _PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenNhomChanging(string value);
    partial void OnTenNhomChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public NhomNhanVien()
		{
			this._NhanVienNhomNhanViens = new EntitySet<NhanVienNhomNhanVien>(new Action<NhanVienNhomNhanVien>(this.attach_NhanVienNhomNhanViens), new Action<NhanVienNhomNhanVien>(this.detach_NhanVienNhomNhanViens));
			this._PhanQuyens = new EntitySet<PhanQuyen>(new Action<PhanQuyen>(this.attach_PhanQuyens), new Action<PhanQuyen>(this.detach_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhom", DbType="NVarChar(100)")]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this.OnTenNhomChanging(value);
					this.SendPropertyChanging();
					this._TenNhom = value;
					this.SendPropertyChanged("TenNhom");
					this.OnTenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNhanVien_NhanVienNhomNhanVien", Storage="_NhanVienNhomNhanViens", ThisKey="Id", OtherKey="Id_Nhom")]
		public EntitySet<NhanVienNhomNhanVien> NhanVienNhomNhanViens
		{
			get
			{
				return this._NhanVienNhomNhanViens;
			}
			set
			{
				this._NhanVienNhomNhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNhanVien_PhanQuyen", Storage="_PhanQuyens", ThisKey="Id", OtherKey="Id_Nhom")]
		public EntitySet<PhanQuyen> PhanQuyens
		{
			get
			{
				return this._PhanQuyens;
			}
			set
			{
				this._PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanVienNhomNhanViens(NhanVienNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhomNhanVien = this;
		}
		
		private void detach_NhanVienNhomNhanViens(NhanVienNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhomNhanVien = null;
		}
		
		private void attach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.NhomNhanVien = this;
		}
		
		private void detach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.NhomNhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Nhom;
		
		private int _Id_MH;
		
		private System.Nullable<bool> _CoQuyen;
		
		private EntityRef<ManHinh> _ManHinh;
		
		private EntityRef<NhomNhanVien> _NhomNhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_NhomChanging(int value);
    partial void OnId_NhomChanged();
    partial void OnId_MHChanging(int value);
    partial void OnId_MHChanged();
    partial void OnCoQuyenChanging(System.Nullable<bool> value);
    partial void OnCoQuyenChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._ManHinh = default(EntityRef<ManHinh>);
			this._NhomNhanVien = default(EntityRef<NhomNhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Nhom", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Nhom
		{
			get
			{
				return this._Id_Nhom;
			}
			set
			{
				if ((this._Id_Nhom != value))
				{
					if (this._NhomNhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_NhomChanging(value);
					this.SendPropertyChanging();
					this._Id_Nhom = value;
					this.SendPropertyChanged("Id_Nhom");
					this.OnId_NhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_MH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_MH
		{
			get
			{
				return this._Id_MH;
			}
			set
			{
				if ((this._Id_MH != value))
				{
					if (this._ManHinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_MHChanging(value);
					this.SendPropertyChanging();
					this._Id_MH = value;
					this.SendPropertyChanged("Id_MH");
					this.OnId_MHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoQuyen", DbType="Bit")]
		public System.Nullable<bool> CoQuyen
		{
			get
			{
				return this._CoQuyen;
			}
			set
			{
				if ((this._CoQuyen != value))
				{
					this.OnCoQuyenChanging(value);
					this.SendPropertyChanging();
					this._CoQuyen = value;
					this.SendPropertyChanged("CoQuyen");
					this.OnCoQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManHinh_PhanQuyen", Storage="_ManHinh", ThisKey="Id_MH", OtherKey="Id", IsForeignKey=true)]
		public ManHinh ManHinh
		{
			get
			{
				return this._ManHinh.Entity;
			}
			set
			{
				ManHinh previousValue = this._ManHinh.Entity;
				if (((previousValue != value) 
							|| (this._ManHinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ManHinh.Entity = null;
						previousValue.PhanQuyens.Remove(this);
					}
					this._ManHinh.Entity = value;
					if ((value != null))
					{
						value.PhanQuyens.Add(this);
						this._Id_MH = value.Id;
					}
					else
					{
						this._Id_MH = default(int);
					}
					this.SendPropertyChanged("ManHinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNhanVien_PhanQuyen", Storage="_NhomNhanVien", ThisKey="Id_Nhom", OtherKey="Id", IsForeignKey=true)]
		public NhomNhanVien NhomNhanVien
		{
			get
			{
				return this._NhomNhanVien.Entity;
			}
			set
			{
				NhomNhanVien previousValue = this._NhomNhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhomNhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomNhanVien.Entity = null;
						previousValue.PhanQuyens.Remove(this);
					}
					this._NhomNhanVien.Entity = value;
					if ((value != null))
					{
						value.PhanQuyens.Add(this);
						this._Id_Nhom = value.Id;
					}
					else
					{
						this._Id_Nhom = default(int);
					}
					this.SendPropertyChanged("NhomNhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhapSach")]
	public partial class PhieuNhapSach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private System.Nullable<int> _Id_NCC;
		
		private System.Nullable<int> _Id_NV;
		
		private System.Nullable<int> _TongTien;
		
		private System.Nullable<bool> _DaXoa;
		
		private EntitySet<ChiTietPhieuNhapSach> _ChiTietPhieuNhapSaches;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnId_NCCChanging(System.Nullable<int> value);
    partial void OnId_NCCChanged();
    partial void OnId_NVChanging(System.Nullable<int> value);
    partial void OnId_NVChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    partial void OnDaXoaChanging(System.Nullable<bool> value);
    partial void OnDaXoaChanged();
    #endregion
		
		public PhieuNhapSach()
		{
			this._ChiTietPhieuNhapSaches = new EntitySet<ChiTietPhieuNhapSach>(new Action<ChiTietPhieuNhapSach>(this.attach_ChiTietPhieuNhapSaches), new Action<ChiTietPhieuNhapSach>(this.detach_ChiTietPhieuNhapSaches));
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_NCC", DbType="Int")]
		public System.Nullable<int> Id_NCC
		{
			get
			{
				return this._Id_NCC;
			}
			set
			{
				if ((this._Id_NCC != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_NCCChanging(value);
					this.SendPropertyChanging();
					this._Id_NCC = value;
					this.SendPropertyChanged("Id_NCC");
					this.OnId_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_NV", DbType="Int")]
		public System.Nullable<int> Id_NV
		{
			get
			{
				return this._Id_NV;
			}
			set
			{
				if ((this._Id_NV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_NVChanging(value);
					this.SendPropertyChanging();
					this._Id_NV = value;
					this.SendPropertyChanged("Id_NV");
					this.OnId_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaXoa", DbType="Bit")]
		public System.Nullable<bool> DaXoa
		{
			get
			{
				return this._DaXoa;
			}
			set
			{
				if ((this._DaXoa != value))
				{
					this.OnDaXoaChanging(value);
					this.SendPropertyChanging();
					this._DaXoa = value;
					this.SendPropertyChanged("DaXoa");
					this.OnDaXoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhapSach_ChiTietPhieuNhapSach", Storage="_ChiTietPhieuNhapSaches", ThisKey="Id", OtherKey="Id_PNS")]
		public EntitySet<ChiTietPhieuNhapSach> ChiTietPhieuNhapSaches
		{
			get
			{
				return this._ChiTietPhieuNhapSaches;
			}
			set
			{
				this._ChiTietPhieuNhapSaches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_PhieuNhapSach", Storage="_NhaCungCap", ThisKey="Id_NCC", OtherKey="Id", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.PhieuNhapSaches.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.PhieuNhapSaches.Add(this);
						this._Id_NCC = value.Id;
					}
					else
					{
						this._Id_NCC = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhapSach", Storage="_NhanVien", ThisKey="Id_NV", OtherKey="Id", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuNhapSaches.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuNhapSaches.Add(this);
						this._Id_NV = value.Id;
					}
					else
					{
						this._Id_NV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuNhapSaches(ChiTietPhieuNhapSach entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhapSach = this;
		}
		
		private void detach_ChiTietPhieuNhapSaches(ChiTietPhieuNhapSach entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhapSach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sach")]
	public partial class Sach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ten;
		
		private System.Nullable<int> _Id_TL;
		
		private System.Nullable<int> _Id_TG;
		
		private System.Nullable<int> _Id_NXB;
		
		private System.Nullable<int> _NamXuatBan;
		
		private System.Nullable<int> _GiaBan;
		
		private System.Nullable<int> _SoLuong;
		
		private string _HinhAnh;
		
		private System.Nullable<bool> _DaXoa;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntitySet<ChiTietGioHang> _ChiTietGioHangs;
		
		private EntitySet<ChiTietPhieuNhapSach> _ChiTietPhieuNhapSaches;
		
		private EntityRef<NhaXuatBan> _NhaXuatBan;
		
		private EntityRef<TacGia> _TacGia;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnId_TLChanging(System.Nullable<int> value);
    partial void OnId_TLChanged();
    partial void OnId_TGChanging(System.Nullable<int> value);
    partial void OnId_TGChanged();
    partial void OnId_NXBChanging(System.Nullable<int> value);
    partial void OnId_NXBChanged();
    partial void OnNamXuatBanChanging(System.Nullable<int> value);
    partial void OnNamXuatBanChanged();
    partial void OnGiaBanChanging(System.Nullable<int> value);
    partial void OnGiaBanChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnDaXoaChanging(System.Nullable<bool> value);
    partial void OnDaXoaChanged();
    #endregion
		
		public Sach()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._ChiTietGioHangs = new EntitySet<ChiTietGioHang>(new Action<ChiTietGioHang>(this.attach_ChiTietGioHangs), new Action<ChiTietGioHang>(this.detach_ChiTietGioHangs));
			this._ChiTietPhieuNhapSaches = new EntitySet<ChiTietPhieuNhapSach>(new Action<ChiTietPhieuNhapSach>(this.attach_ChiTietPhieuNhapSaches), new Action<ChiTietPhieuNhapSach>(this.detach_ChiTietPhieuNhapSaches));
			this._NhaXuatBan = default(EntityRef<NhaXuatBan>);
			this._TacGia = default(EntityRef<TacGia>);
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(100)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TL", DbType="Int")]
		public System.Nullable<int> Id_TL
		{
			get
			{
				return this._Id_TL;
			}
			set
			{
				if ((this._Id_TL != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_TLChanging(value);
					this.SendPropertyChanging();
					this._Id_TL = value;
					this.SendPropertyChanged("Id_TL");
					this.OnId_TLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TG", DbType="Int")]
		public System.Nullable<int> Id_TG
		{
			get
			{
				return this._Id_TG;
			}
			set
			{
				if ((this._Id_TG != value))
				{
					if (this._TacGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_TGChanging(value);
					this.SendPropertyChanging();
					this._Id_TG = value;
					this.SendPropertyChanged("Id_TG");
					this.OnId_TGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_NXB", DbType="Int")]
		public System.Nullable<int> Id_NXB
		{
			get
			{
				return this._Id_NXB;
			}
			set
			{
				if ((this._Id_NXB != value))
				{
					if (this._NhaXuatBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_NXBChanging(value);
					this.SendPropertyChanging();
					this._Id_NXB = value;
					this.SendPropertyChanged("Id_NXB");
					this.OnId_NXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamXuatBan", DbType="Int")]
		public System.Nullable<int> NamXuatBan
		{
			get
			{
				return this._NamXuatBan;
			}
			set
			{
				if ((this._NamXuatBan != value))
				{
					this.OnNamXuatBanChanging(value);
					this.SendPropertyChanging();
					this._NamXuatBan = value;
					this.SendPropertyChanged("NamXuatBan");
					this.OnNamXuatBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Int")]
		public System.Nullable<int> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(MAX)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaXoa", DbType="Bit")]
		public System.Nullable<bool> DaXoa
		{
			get
			{
				return this._DaXoa;
			}
			set
			{
				if ((this._DaXoa != value))
				{
					this.OnDaXoaChanging(value);
					this.SendPropertyChanging();
					this._DaXoa = value;
					this.SendPropertyChanged("DaXoa");
					this.OnDaXoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="Id", OtherKey="Id_Sach")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_ChiTietGioHang", Storage="_ChiTietGioHangs", ThisKey="Id", OtherKey="Id_Sach")]
		public EntitySet<ChiTietGioHang> ChiTietGioHangs
		{
			get
			{
				return this._ChiTietGioHangs;
			}
			set
			{
				this._ChiTietGioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_ChiTietPhieuNhapSach", Storage="_ChiTietPhieuNhapSaches", ThisKey="Id", OtherKey="Id_Sach")]
		public EntitySet<ChiTietPhieuNhapSach> ChiTietPhieuNhapSaches
		{
			get
			{
				return this._ChiTietPhieuNhapSaches;
			}
			set
			{
				this._ChiTietPhieuNhapSaches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaXuatBan_Sach", Storage="_NhaXuatBan", ThisKey="Id_NXB", OtherKey="Id", IsForeignKey=true, DeleteRule="SET NULL")]
		public NhaXuatBan NhaXuatBan
		{
			get
			{
				return this._NhaXuatBan.Entity;
			}
			set
			{
				NhaXuatBan previousValue = this._NhaXuatBan.Entity;
				if (((previousValue != value) 
							|| (this._NhaXuatBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaXuatBan.Entity = null;
						previousValue.Saches.Remove(this);
					}
					this._NhaXuatBan.Entity = value;
					if ((value != null))
					{
						value.Saches.Add(this);
						this._Id_NXB = value.Id;
					}
					else
					{
						this._Id_NXB = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhaXuatBan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TacGia_Sach", Storage="_TacGia", ThisKey="Id_TG", OtherKey="Id", IsForeignKey=true, DeleteRule="SET NULL")]
		public TacGia TacGia
		{
			get
			{
				return this._TacGia.Entity;
			}
			set
			{
				TacGia previousValue = this._TacGia.Entity;
				if (((previousValue != value) 
							|| (this._TacGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TacGia.Entity = null;
						previousValue.Saches.Remove(this);
					}
					this._TacGia.Entity = value;
					if ((value != null))
					{
						value.Saches.Add(this);
						this._Id_TG = value.Id;
					}
					else
					{
						this._Id_TG = default(Nullable<int>);
					}
					this.SendPropertyChanged("TacGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Sach", Storage="_TheLoai", ThisKey="Id_TL", OtherKey="Id", IsForeignKey=true, DeleteRule="SET NULL")]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.Saches.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.Saches.Add(this);
						this._Id_TL = value.Id;
					}
					else
					{
						this._Id_TL = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.Sach = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.Sach = null;
		}
		
		private void attach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.Sach = this;
		}
		
		private void detach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.Sach = null;
		}
		
		private void attach_ChiTietPhieuNhapSaches(ChiTietPhieuNhapSach entity)
		{
			this.SendPropertyChanging();
			entity.Sach = this;
		}
		
		private void detach_ChiTietPhieuNhapSaches(ChiTietPhieuNhapSach entity)
		{
			this.SendPropertyChanging();
			entity.Sach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TacGia")]
	public partial class TacGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ten;
		
		private EntitySet<Sach> _Saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    #endregion
		
		public TacGia()
		{
			this._Saches = new EntitySet<Sach>(new Action<Sach>(this.attach_Saches), new Action<Sach>(this.detach_Saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(100)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TacGia_Sach", Storage="_Saches", ThisKey="Id", OtherKey="Id_TG")]
		public EntitySet<Sach> Saches
		{
			get
			{
				return this._Saches;
			}
			set
			{
				this._Saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.TacGia = this;
		}
		
		private void detach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.TacGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ten;
		
		private EntitySet<Sach> _Saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    #endregion
		
		public TheLoai()
		{
			this._Saches = new EntitySet<Sach>(new Action<Sach>(this.attach_Saches), new Action<Sach>(this.detach_Saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(100)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Sach", Storage="_Saches", ThisKey="Id", OtherKey="Id_TL")]
		public EntitySet<Sach> Saches
		{
			get
			{
				return this._Saches;
			}
			set
			{
				this._Saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
}
#pragma warning restore 1591
